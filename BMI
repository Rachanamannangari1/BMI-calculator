import tkinter
import matplotlib.pyplot as plt

from  matplotlib.backends.backend_tkagg import FigureCanvasTkAgg
from email import message
from tkinter import ttk
from  tkinter import messagebox


bmilist=[]
bmidict = {'underweight': 0, 'normal': 0, 'overweight': 0, 'obese': 0}
def save_data():
    global userheight
    global userweight

    username = enter_name.get()
    userage = enter_age.get()
    userheight=entry_height.get()

    userweight= entry_weight.get()



    if userage =='' and int(userage)<=0:
        tkinter.messagebox.showerror(title="Ge can not be empty",message="Please enter valid age ")


    if  userheight != '' and userweight != '':
      if int(userheight) <= 0 or int(userweight) <= 0:
            tkinter.messagebox.showerror(title="invalid input", message="Please input valid Height and Weight")


      with open('bmi.txt','a') as bmifile:
             list1=[]
             bmifile.write('\nUser name: '+username+'\nUser age '+userage+'\nUser height '+userheight+'\nUser weight '+userweight)
             tkinter.messagebox.showinfo(title="Saving..",message="Data saved successfully")

      with open('bmi.txt', 'r') as readfile:

            list1.append(readfile.readline().strip())
      print (list1)
    else:
        tkinter.messagebox.showwarning(title="Error,Missing data",message="Enter valid height and weight ")
        clear_fields()
    result = bmi()
    tkinter.messagebox.showinfo(title=" BMI Result",message="Your BMI is "+str(result))

    # Update the global BMI list and dictionary
    bmilist.append(result)
    update_bmi_dict(result)

def bmi():
        h = float(userheight) * .01
        w=float(userweight)
        bmidict={}
        b = w / h ** 2
        if b < 18.5:
            bmilist.append("underweight")
            return 'underweight'
        elif b < 25:
            bmilist.append("normal")
            return 'normal'
        elif b < 30:
            bmilist.append("overweight")
            return 'overweight'
        else:
            bmilist.append("obese")
            return 'obese'
#def bmi_result():

    #result=bmi()
    #milist.append(bmilist)
    #tkinter.messagebox.showinfo(title=" BMI Result",message="Your BMI is "+str(result))
    #return bmilist
def update_bmi_dict(result):



    for result in  bmilist:
       if result=='underweight':
           bmidict['underweight']+=1
       elif result=='normal':
           bmidict['normal'] += 1
       elif result=='overweight':
           bmidict['overweight']+=1
       elif result=='obese':
           bmidict['obese']+=1
    print(bmidict)
def show_graph():
    labels = []
    numbers = []
    for grade, count in bmidict.items():
        if count != 0:
            labels.append(grade)
            numbers.append(count)
    #print(labels, '\n', numbers)

    f, a = plt.subplots()
    a.pie(numbers, labels=labels, autopct='%.0f%%')  # '%1.1f%%' 1 decimal place percentage
    plt.title('Percentage of the people under each category')
    plt.show()

    # Embed the pie chart in the Tkinter window
    canvas = FigureCanvasTkAgg(f, master=window)  # Create a canvas widget
    canvas.draw()
    canvas.get_tk_widget().grid(row=5, column=0, columnspan=2)





window=tkinter.Tk()
window.title("BMI calculator")
frame=tkinter.Frame(window)

    #pack or grid
frame.pack()
userinfoframe=tkinter.LabelFrame(frame,text="User information")
userinfoframe.grid(row=0,column=0)
user_name=tkinter.Label(userinfoframe,text="Name")
user_name.grid(row=0,column=0)
enter_name=tkinter.Entry(userinfoframe)
enter_name.grid(row=0,column=1)
valueage=list(range(101))

user_age=tkinter.Label(userinfoframe,text="Age")
user_age.grid(row=1,column=0)
enter_age=ttk.Combobox(userinfoframe,values=valueage)
enter_age.grid(row=1,column=1)

user_height=tkinter.Label(userinfoframe,text='Height')
user_height.grid(row=2,column=0)
entry_height=tkinter.Entry(userinfoframe)
entry_height.grid(row=2,column=1)
cm=tkinter.Label(userinfoframe,text="cm")
cm.grid(row=2,column=2)

user_weight=tkinter.Label(userinfoframe,text='Weight')
user_weight.grid(row=3,column=0)
entry_weight=tkinter.Entry(userinfoframe)
entry_weight.grid(row=3,column=1)

kg=tkinter.Label(userinfoframe,text="kg")
kg.grid(row=3,column=2)

save=tkinter.Button(userinfoframe,text='Save',command=save_data)
save.grid(row=4,column=0)
calculate=tkinter.Button(userinfoframe,text='Calculate BMI',command=bmi)
calculate.grid(row=4,column=1)

show_graph_button = tkinter.Button(frame, text="Show Graph", command=show_graph)
show_graph_button.grid(row=4, column=0, columnspan=2, pady=10)

window.mainloop()
